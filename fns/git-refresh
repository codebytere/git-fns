#!/usr/bin/env bash

set -e

: '
git refresh [-r|remote=<name>] [-b|--branch=<name>]

Cleanly rebase a local working branch on a remote branch,
which defaults to origin/master.
'

# If remote not passed, default to origin.
REMOTE="origin"

# If branch not passed, default to master.
BRANCH="master"

# Parse user arguments.
for i in "$@"
do
case $i in
  -r=*|--remote=*)
  REMOTE="${i#*=}"
  ;;
  -b=*|--branch=*)
  BRANCH="${i#*=}"
  ;;
  *)
  echo "Unknown argument: $i" && exit 1
  ;;
esac
done

if CURRENT_BRANCH=$(git symbolic-ref --short -q HEAD)
then
  # Stash the changes in the current branch.
  git stash

  # Checkout the chosen branch.
  git checkout "$BRANCH"

  # Pull from remote branch and rebase.
  git pull --rebase "$REMOTE" "$BRANCH"

  # Return to working branch.
  git checkout "$CURRENT_BRANCH"

  # Rebase current working branch .
  git rebase "$BRANCH"

  # Apply locally stashed changes.
  git stash apply
else
  echo 'Error: Cannot get current branch'
fi